FROM node:16-alpine as node-image

ARG DONT_USE_ENV
ENV DONT_USE_ENV $DONT_USE_ENV

ARG WS_PATH
ENV WS_PATH $WS_PATH

ARG WS_PATH_ANDROID
ENV WS_PATH_ANDROID $WS_PATH_ANDROID

ARG HOST_WEB
ENV HOST_WEB $HOST_WEB

ARG HOST_ANDROID
ENV HOST_ANDROID $HOST_ANDROID

ARG HOST_NAME
ENV HOST_NAME $HOST_NAME

WORKDIR /front

COPY . .
RUN if [[ "$DONT_USE_ENV" = "1" ]] ; then rm -f .env.production ; else mv .env.production .env ; fi

RUN apk add curl

RUN npm install --save-dev
# We disable serverside props for all pages, so that we can build a static version of the app
RUN cd ./pages/ && grep -rl getServerSideProps . | xargs sed -i 's/getServerSideProps/DONTgetServerSideProps/g'

# In the capacitor config we replace the default android url '10.0.2.2:8000'
RUN if ! [[ "$DONT_USE_ENV" = "1" ]] ; then sed -i "s~10.0.2.2:8000~$HOST_NAME~g" ./capacitor.config.ts ; fi
# enable android scheme https TODO: just update the config too use env vars
RUN if ! [[ "$DONT_USE_ENV" = "1" ]] ; then sed -i "s~//androidScheme~androidScheme~g" ./capacitor.config.ts ; fi

RUN npm run static
RUN ./node_modules/.bin/cap sync

FROM ghcr.io/tbscode/tims-packages_android_gradle_jdk17:latest as android-image

WORKDIR /android_build/

COPY --from=node-image /front/ .

USER root
RUN chmod -R 777 .

RUN cd ./android && ./gradlew assembleDebug

FROM node:16-alpine

WORKDIR /build

RUN npm install -g http-server

COPY --from=android-image /android_build/android/app/build/outputs/ .
COPY --from=android-image /android_build/capacitor.config.ts .
COPY --from=android-image /android_build/.env .

EXPOSE 8001

ENTRYPOINT [ "http-server", "-p", "8001", "." ]